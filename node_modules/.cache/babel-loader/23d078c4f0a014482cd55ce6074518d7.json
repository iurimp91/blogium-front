{"ast":null,"code":"var _jsxFileName = \"/home/iurimp91/projetos/pratica-node-blogium/front-blogium/src/components/PostEditPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from './Spinner';\nimport { useHistory, useParams } from 'react-router-dom';\nimport PostManipulation from './PostManipulation/PostManipulation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostEditPage() {\n  _s();\n\n  const {\n    postId\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [title, setTitle] = useState('');\n  const [coverUrl, setCoverUrl] = useState('');\n  const [content, setContent] = useState('');\n  const [isSaveButtonDisabled, setSaveButtonDisable] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const [post] = posts.filter(item => item.id === postId);\n    setPost(post);\n    setTitle(post.title);\n    setCoverUrl(post.coverUrl);\n    setContent(post.content);\n  }, [postId]);\n\n  function onPostSaveButtonClick() {\n    const body = {\n      title,\n      content,\n      coverUrl\n    };\n    const request = axios.put(`http://localhost:5000/posts/${postId}`, body);\n    request.then(response => {\n      alert(\"Post alterado com sucesso!\");\n      history.push(`/posts/${postId}`);\n    });\n    request.catch(error => {\n      alert(\"Algo deu errado com sua requisição, por favor, tente novamente.\");\n    });\n  }\n\n  if (!post || !content) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(PostManipulation, {\n    title: title,\n    onTitleChange: newTitle => setTitle(newTitle),\n    coverUrl: coverUrl,\n    onCoverUrlChange: newCoverUrl => setCoverUrl(newCoverUrl),\n    content: content,\n    onContentChange: newContent => setContent(newContent),\n    onPostSaveButtonClick: onPostSaveButtonClick,\n    postId: postId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostEditPage, \"Tp2WDkY7u2toJcM3FpqNs/wYO/Q=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = PostEditPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostEditPage\");","map":{"version":3,"sources":["/home/iurimp91/projetos/pratica-node-blogium/front-blogium/src/components/PostEditPage.js"],"names":["React","useState","useEffect","axios","Spinner","useHistory","useParams","PostManipulation","PostEditPage","postId","post","setPost","title","setTitle","coverUrl","setCoverUrl","content","setContent","isSaveButtonDisabled","setSaveButtonDisable","history","posts","filter","item","id","onPostSaveButtonClick","body","request","put","then","response","alert","push","catch","error","newTitle","newCoverUrl","newContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,oBAAD,EAAuBC,oBAAvB,IAA+ClB,QAAQ,CAAC,KAAD,CAA7D;AACA,QAAMmB,OAAO,GAAGf,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM,CAAEQ,IAAF,IAAWW,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYf,MAAjC,CAAjB;AAEAE,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAG,IAAAA,QAAQ,CAACH,IAAI,CAACE,KAAN,CAAR;AACAG,IAAAA,WAAW,CAACL,IAAI,CAACI,QAAN,CAAX;AACAG,IAAAA,UAAU,CAACP,IAAI,CAACM,OAAN,CAAV;AACD,GARQ,EAQN,CAACP,MAAD,CARM,CAAT;;AAUA,WAASgB,qBAAT,GAAiC;AAC/B,UAAMC,IAAI,GAAG;AAAEd,MAAAA,KAAF;AAASI,MAAAA,OAAT;AAAkBF,MAAAA;AAAlB,KAAb;AACA,UAAMa,OAAO,GAAGxB,KAAK,CAACyB,GAAN,CAAW,+BAA8BnB,MAAO,EAAhD,EAAmDiB,IAAnD,CAAhB;AAEAC,IAAAA,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAI;AACvBC,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACAX,MAAAA,OAAO,CAACY,IAAR,CAAc,UAASvB,MAAO,EAA9B;AACD,KAHD;AAKAkB,IAAAA,OAAO,CAACM,KAAR,CAAcC,KAAK,IAAI;AACrBH,MAAAA,KAAK,CAAC,iEAAD,CAAL;AACD,KAFD;AAGD;;AAED,MAAI,CAACrB,IAAD,IAAS,CAACM,OAAd,EAAuB,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEvB,sBACE,QAAC,gBAAD;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,aAAa,EAAGuB,QAAD,IAActB,QAAQ,CAACsB,QAAD,CAFvC;AAGE,IAAA,QAAQ,EAAErB,QAHZ;AAIE,IAAA,gBAAgB,EAAGsB,WAAD,IAAiBrB,WAAW,CAACqB,WAAD,CAJhD;AAKE,IAAA,OAAO,EAAEpB,OALX;AAME,IAAA,eAAe,EAAGqB,UAAD,IAAgBpB,UAAU,CAACoB,UAAD,CAN7C;AAOE,IAAA,qBAAqB,EAAEZ,qBAPzB;AAQE,IAAA,MAAM,EAAEhB;AARV;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA/CuBD,Y;UACHF,S,EAMHD,U;;;KAPMG,Y","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from './Spinner';\nimport { useHistory, useParams } from 'react-router-dom';\nimport PostManipulation from './PostManipulation/PostManipulation';\n\nexport default function PostEditPage() {\n  const { postId } = useParams();\n  const [post, setPost] = useState(null);\n  const [title, setTitle] = useState('');\n  const [coverUrl, setCoverUrl] = useState('');\n  const [content, setContent] = useState('');\n  const [isSaveButtonDisabled, setSaveButtonDisable] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    const [ post ] = posts.filter(item => item.id === postId);\n\n    setPost(post);\n\n    setTitle(post.title);\n    setCoverUrl(post.coverUrl);\n    setContent(post.content);\n  }, [postId]);\n\n  function onPostSaveButtonClick() {\n    const body = { title, content, coverUrl };\n    const request = axios.put(`http://localhost:5000/posts/${postId}`, body);\n\n    request.then(response => {\n      alert(\"Post alterado com sucesso!\");\n      history.push(`/posts/${postId}`);\n    });\n\n    request.catch(error => {\n      alert(\"Algo deu errado com sua requisição, por favor, tente novamente.\");\n    });\n  }\n\n  if (!post || !content) return <Spinner />;\n\n  return (\n    <PostManipulation\n      title={title}\n      onTitleChange={(newTitle) => setTitle(newTitle)}\n      coverUrl={coverUrl}\n      onCoverUrlChange={(newCoverUrl) => setCoverUrl(newCoverUrl)}\n      content={content}\n      onContentChange={(newContent) => setContent(newContent)}\n      onPostSaveButtonClick={onPostSaveButtonClick}\n      postId={postId}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}